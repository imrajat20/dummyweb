{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amity\\\\Downloads\\\\002 01-starting-project\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useEffect, useState } from 'react';\nimport uiSlice from './store/uiSlice';\nimport React from 'react';\nimport Notification from './components/UI/Notifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const cartShown = useSelector(state => state.ui.showCart);\n  const cart = useSelector(state => state.cart);\n  const notification = useState(state => state.ui.notification);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiSlice.actions.setNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!'\n      }));\n      const response = await fetch('https://ecommerce-web-c8b78-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        // throw new Error('Sending cart data failed');\n        dispatch(uiSlice.actions.setNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending cart data failed!'\n        }));\n      }\n      // const responseData = await response.json();\n      dispatch(uiSlice.actions.setNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    };\n    sendCartData().catch(error => {\n      dispatch(uiSlice.actions.setNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [cartShown && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yGfaKtXTcXC2G4yL46BdP6fz03k=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useDispatch","useSelector","Cart","Layout","Products","useEffect","useState","uiSlice","React","Notification","jsxDEV","_jsxDEV","App","_s","cartShown","state","ui","showCart","cart","notification","dispatch","sendCartData","actions","setNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","catch","error","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/amity/Downloads/002 01-starting-project/01-starting-project/src/App.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useEffect, useState } from 'react';\nimport uiSlice from './store/uiSlice';\nimport React from 'react';\nimport Notification from './components/UI/Notifications';\n\nfunction App() {\n\n  const cartShown = useSelector(state => state.ui.showCart);\n  const cart = useSelector(state => state.cart);\n  const notification = useState(state => state.ui.notification)\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const sendCartData = async() => {\n      dispatch(uiSlice.actions.setNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!'\n      }));\n     const response = await fetch('https://ecommerce-web-c8b78-default-rtdb.firebaseio.com/cart.json',{\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        // throw new Error('Sending cart data failed');\n        dispatch(uiSlice.actions.setNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending cart data failed!'\n        }))\n      }\n      // const responseData = await response.json();\n      dispatch(uiSlice.actions.setNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }))\n    };\n    sendCartData().catch(\n      error => {\n        dispatch(uiSlice.actions.setNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending cart data failed!'\n        }))\n      }\n    );\n  }, [cart, dispatch])\n\n  return (\n    <React.Fragment>\n     { notification && <Notification status={notification.status} title={notification.title} message={notification.message}/>}\n      <Layout>\n      { cartShown && <Cart />}\n      <Products />\n    </Layout>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}