{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amity\\\\Downloads\\\\002 01-starting-project\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport MovieForm from './components/MovieForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-251e2-default-rtdb.firebaseio.com/movies.json\");\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n      const data = await response.json();\n      const transformed = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformed);\n    } catch (error) {\n      setError(error.message);\n    }\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  const addMovieHandler = () => {\n    console.log(movies);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MovieForm, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!loading && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 22\n      }, this), !loading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pRqo/BcLGEy9AQ/YXTiNybr3HdU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","MovieForm","jsxDEV","_jsxDEV","App","_s","movies","setMovies","loading","setLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformed","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","addMovieHandler","console","log","Fragment","children","onAddMovie","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/amity/Downloads/002 01-starting-project/01-starting-project/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport MovieForm from './components/MovieForm';\n\nfunction App() {\n\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n\n  const fetchMoviesHandler = useCallback( async()=> {\n    setLoading(true);\n    setError(null);\n\n  try {\n      const response = await fetch(\"https://react-http-251e2-default-rtdb.firebaseio.com/movies.json\")\n    \n      if(!response.ok){\n        throw new Error('Something went wrong')\n      }\n      const data = await response.json();\n      const transformed = data.results.map((movieData) => {\n        return ({\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        })\n      });\n      setMovies(transformed);\n     \n    }\n    catch (error) {\n        setError(error.message)\n    }\n    setLoading(false);\n  },[]);\n\n  useEffect(()=>{\n    fetchMoviesHandler();\n  },[fetchMoviesHandler]);\n\n  const addMovieHandler = () => {\n    console.log(movies);\n  };\n\n   return (\n    <React.Fragment>\n      <section>\n      <MovieForm onAddMovie={addMovieHandler}/>\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        { !loading && <MoviesList movies={movies} />}\n        { loading && <p>Loading...</p>}\n        { !loading && error && <p>{error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}